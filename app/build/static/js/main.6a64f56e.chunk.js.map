{"version":3,"sources":["App/App.tsx","env.ts","serviceWorker.ts","index.tsx","App/Provider.tsx","components/Err.tsx","components/FormContainer.tsx","components/Loading.tsx","components/Refetch.tsx","components/Retry.tsx","components/UserOption.tsx","components/UserSelect.tsx","generated/graphql.tsx","utils/generators.ts","utils/hooks.ts","utils/index.ts","models/index.ts","components/LoadingOverlay.tsx","pages/Njam/NjamForm.tsx","pages/Njam/CreateNjam.tsx","pages/Njam/Njam.tsx","pages/Njams.tsx","pages/SignIn.tsx","pages/Users.tsx","App/Layout.tsx"],"names":["module","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_hot_loader__WEBPACK_IMPORTED_MODULE_1__","_Layout__WEBPACK_IMPORTED_MODULE_2__","_Provider__WEBPACK_IMPORTED_MODULE_3__","hot","a","createElement","development","api","appName","envs","Boolean","window","location","hostname","match","ReactDOM","render","react_default","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","_apollo_react_hooks__WEBPACK_IMPORTED_MODULE_0__","apollo_boost__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_3__","react__WEBPACK_IMPORTED_MODULE_3___default","react_apollo__WEBPACK_IMPORTED_MODULE_4__","react_router_dom__WEBPACK_IMPORTED_MODULE_5__","_env__WEBPACK_IMPORTED_MODULE_6__","client","ApolloClient","uri","env","Provider","_ref","children","Err","name","message","alert_default","description","type","FormContainer","style","props","Object","objectWithoutProperties","dist","assign","objectSpread","position","mx","Loading","justifyContent","spin","size","Refetch","refetch","es_button","onClick","Retry","error","Fragment","components_Err","components_Refetch","UserOption","id","lastname","es_select","Option","key","value","UserSelect","React","forwardRef","ref","users","map","CompleteUserFragmentDoc","gql","_templateObject","NjamBaseFragmentDoc","_templateObject2","NjamSummaryFragmentDoc","_templateObject3","CompleteNjamFragmentDoc","_templateObject4","CreateNjamDocument","_templateObject5","LeaveNjamDocument","_templateObject6","JoinNjamDocument","_templateObject7","ToggleOrderedDocument","_templateObject8","EditNjamDocument","_templateObject9","UsersDocument","_templateObject10","useUsersQuery","baseOptions","ApolloReactHooks","UserIdsDocument","_templateObject11","NjamsDocument","_templateObject12","MyNjamsDocument","_templateObject13","_templateObject14","NjamsCountDocument","_templateObject15","MyNjamsCountDocument","_templateObject16","NjamPageDocument","_templateObject17","generateUser","faker","random","uuid","firstName","lastName","generateCollection","generator","constraints","length","number","range","generateUsers","min","max","useUserId","organizer","participants","concat","address","streetName","time","date","recent","toDateString","ordered","boolean","lorem","sentences","_React$useState","useState","_React$useState2","slicedToArray","userId","setUserId","useEffect","localStorage","getItem","toAbsolutePath","s","urlJoin","kebabCase","createMoment","moment","Date","formValuesToNjam","participantIds","values","toDate","toString","routeName","njams","createNjam","routePath","mapValues","publicRoutePath","signIn","LoadingOverlay","components_Loading","top","left","zIndex","NjamForm","_ref$readOnly","readOnly","form","initialValues","_ref$hideOrdered","hideOrdered","_ref$readOnlyParticip","readOnlyParticipants","readOnlyStyle","pointerEvents","organizerId","es_form","onSubmit","e","preventDefault","hideRequiredMark","Item","label","getFieldDecorator","initialValue","rules","required","input","time_picker","inputReadOnly","format","disabledHours","filter","hours","display","valuePropName","es_switch","TextArea","components_UserSelect","mode","_ref2","Form","create","disabled","isFieldsTouched","any","getFieldsError","_useCreateNjamMutatio","_useCreateNjamMutatio2","_useCreateNjamMutatio3","data","loading","usersQueryResult","_usersQueryResult$dat","usersNotLoaded","isEmpty","components_FormContainer","components_LoadingOverlay","mb","components_Retry","Njam_NjamForm","add","validateFieldsAndScroll","variables","mt","react_router","to","params","setReadOnly","toggleReadOnly","_useEditNjamMutation","_useEditNjamMutation2","editNjam","editNjamResult","_useNjamPageQuery","useNjamPageQuery","pollInterval","my","njam","formValues","_ref3","njamToFormValues","mr","icon","resetFields","marginRight","_formValuesToNjam","CollectionQueryKey","createNjamAction","mutation","getInverse","text","_useMutation","useMutation","_useMutation2","mutationFunction","_useMutation2$","Error","dataLoaded","Inverse","popover","visible","title","content","LeaveNjam","JoinNjam","columns","capitalize","Column","col","span","overflow","whiteSpace","textOverflow","typography","Text","oneHourInThePast","subtract","Njams","_ref4","path","search","history","count","queries","setQueries","filterNames","filterName","reduce","_filterName","defineProperty","filters","all","always","upcoming","_ref5","isAfter","inProgress","_ref6","isBetween","byYou","_ref7","past","_ref8","isBefore","filterQuery","qs","parse","activeFilter","includes","_useQuery","useQuery","page","pageSize","fetchPolicy","fetchMore","_ref9","_ref10$","countResult","_Object$values","_Object$values2$","_useToggleOrderedMuta","_useToggleOrderedMuta2","toggleOrdered","toggleOrderedResults","toggleOrderedError","loadedAll","Math","ceil","isONNewPage","tabs","activeKey","onChange","push","stringify","_ref11","TabPane","tab","startCase","ml","tooltip","checkedChildren","unCheckedChildren","on","list","loadMore","alignItems","m","height","updateQuery","oldResults","_ref12","fetchMoreResult","_ref13","entries","_ref14","_ref14$","njamsKey","oldNjams","_Object$values3","newNjams","existingIds","_ref15","filteredNjams","_ref16","header","row","i","Title","level","margin","bordered","dataSource","find","_ref17","definitions","myNjams","_ref18","_ref19","renderItem","_ref20","isParticipating","_ref21","react_router_dom","className","css","Njams_templateObject","Njams_Column","defaultChecked","_","njamId","SignIn","setItem","marginTop","Users","_useUsersQuery","_ref$users","routes","Icon","Component","CreateNjam","route","withRouter","pathname","open","setOpen","toggleOpen","_useUserIdsQuery","stopPolling","page_header","onBack","backIcon","drawer","placement","onClose","bodyStyle","padding","menu","selectedKeys","component","exact","Njam"],"mappings":"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","file":"static/js/main.6a64f56e.chunk.js","sourcesContent":["import React from 'react';\nimport { hot } from 'react-hot-loader';\nimport Layout from './Layout';\nimport Provider from './Provider';\n\nconst App: React.FC = () => {\n  return (\n    <Provider>\n      <Layout />\n    </Provider>\n  );\n};\n\nexport default hot(module)(App);\n","const development = {\n  api: 'http://localhost:4000',\n  appName: 'Njam njam',\n};\n\nconst envs: Record<typeof process.env.NODE_ENV, typeof development> = {\n  development,\n  production: development,\n  test: development,\n};\n\nexport default envs[process.env.NODE_ENV];\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { ApolloProvider as ReactApolloProvider } from '@apollo/react-hooks';\nimport 'antd/dist/antd.css';\nimport ApolloClient from 'apollo-boost';\nimport React from 'react';\nimport { ApolloProvider } from 'react-apollo';\nimport { BrowserRouter } from 'react-router-dom';\nimport env from '../env';\n\nconst client = new ApolloClient({\n  uri: env.api,\n});\n\nexport interface ProviderProps {\n  children: React.ReactNode;\n}\n\nconst Provider: React.FC<ProviderProps> = ({ children }) => (\n  <BrowserRouter>\n    <ApolloProvider client={client}>\n      <ReactApolloProvider client={client}>{children}</ReactApolloProvider>\n    </ApolloProvider>\n  </BrowserRouter>\n);\n\nexport default Provider;\n","import Alert from 'antd/lib/alert';\nimport { ApolloError } from 'apollo-boost';\nimport React from 'react';\n\nexport interface ErrProps extends ApolloError {}\n\nconst Err: React.FC<ErrProps> = ({ name, message }) => (\n  <Alert message={name} description={message} type=\"error\" />\n);\n\nexport default Err;\n","import React from 'react';\nimport { Box, BoxProps } from 'rebass';\n\nconst FormContainer: React.FC<Omit<BoxProps, 'mx'>> = ({\n  children,\n  style,\n  ...props\n}) => (\n  <Box {...props} style={{ ...style, position: 'relative' }} mx={4}>\n    {children}\n  </Box>\n);\n\nexport default FormContainer;\n","import { Spin } from 'antd';\nimport React from 'react';\nimport { Box, Flex, FlexProps } from 'rebass';\n\nexport interface LoadingProps extends FlexProps {}\n\nconst Loading: React.FC<LoadingProps> = props => (\n  <Flex justifyContent=\"center\" {...props}>\n    <Box>\n      <Spin size=\"large\" />\n    </Box>\n  </Flex>\n);\n\nexport default Loading;\n","import { QueryResult } from '@apollo/react-common';\nimport { Button } from 'antd';\nimport { ButtonProps } from 'antd/lib/button';\nimport React from 'react';\n\nexport interface RefetchProps extends ButtonProps {\n  refetch: QueryResult['refetch'];\n}\n\nconst Refetch: React.FC<RefetchProps> = ({ children, refetch }) => (\n  <Button onClick={() => refetch()}>{children}</Button>\n);\n\nexport default Refetch;\n","import React from 'react';\nimport Err, { ErrProps } from './Err';\nimport Refetch, { RefetchProps } from './Refetch';\n\nexport interface RetryProps extends RefetchProps {\n  error: ErrProps;\n}\n\nconst Retry: React.FC<RetryProps> = ({ error, refetch, children }) => (\n  <>\n    <Err {...error} />\n    <Refetch refetch={refetch}>{children}</Refetch>\n  </>\n);\n\nexport default Retry;\n","import { Select } from 'antd';\nimport React from 'react';\nimport { User } from '../generated/graphql';\n\nconst UserOption: React.FC<User> = ({ id, name, lastname }) => (\n  <Select.Option key={id} value={id}>\n    {name} {lastname}\n  </Select.Option>\n);\n\nexport default UserOption;\n","import { Select } from 'antd';\nimport { SelectProps } from 'antd/lib/select';\nimport React from 'react';\nimport { User } from '../generated/graphql';\nimport { Users } from '../models';\nimport UserOption from './UserOption';\n\nexport interface UserSelectProps extends SelectProps<User['id']> {\n  users: Users;\n}\n\nconst UserSelect = React.forwardRef<any, UserSelectProps>(\n  ({ users, ...props }, ref) => (\n    <Select ref={ref} {...props}>\n      {users.map(UserOption)}\n    </Select>\n  ),\n);\n\nexport default UserSelect;\n","import gql from 'graphql-tag';\nimport * as ApolloReactCommon from '@apollo/react-common';\nimport * as ApolloReactHooks from '@apollo/react-hooks';\nexport type Maybe<T> = T | null;\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: string,\n  String: string,\n  Boolean: boolean,\n  Int: number,\n  Float: number,\n};\n\nexport type Mutation = {\n  __typename?: 'Mutation',\n  createUser: User,\n  createNjam: Njam,\n  orderNjam: Njam,\n  deleteNjam: Njam,\n  joinNjam: Njam,\n  leaveNjam: Njam,\n  editNjam: Njam,\n};\n\n\nexport type MutationCreateUserArgs = {\n  name: Scalars['String'],\n  lastname: Scalars['String']\n};\n\n\nexport type MutationCreateNjamArgs = {\n  location: Scalars['String'],\n  description?: Maybe<Scalars['String']>,\n  time: Scalars['String'],\n  organizerId: Scalars['ID'],\n  participantIds?: Maybe<Array<Scalars['ID']>>\n};\n\n\nexport type MutationOrderNjamArgs = {\n  njamId: Scalars['ID']\n};\n\n\nexport type MutationDeleteNjamArgs = {\n  njamId: Scalars['ID']\n};\n\n\nexport type MutationJoinNjamArgs = {\n  userId: Scalars['ID'],\n  njamId: Scalars['ID']\n};\n\n\nexport type MutationLeaveNjamArgs = {\n  userId: Scalars['ID'],\n  njamId: Scalars['ID']\n};\n\n\nexport type MutationEditNjamArgs = {\n  id: Scalars['ID'],\n  location?: Maybe<Scalars['String']>,\n  description?: Maybe<Scalars['String']>,\n  time?: Maybe<Scalars['String']>,\n  ordered?: Maybe<Scalars['Boolean']>\n};\n\nexport type Njam = {\n  __typename?: 'Njam',\n  id: Scalars['ID'],\n  location: Scalars['String'],\n  description?: Maybe<Scalars['String']>,\n  time: Scalars['String'],\n  participants: Array<User>,\n  organizer: User,\n  ordered: Scalars['Boolean'],\n};\n\nexport type Query = {\n  __typename?: 'Query',\n  users: Array<User>,\n  user: User,\n  njams: Array<Njam>,\n  njam: Njam,\n  myNjams: Array<Njam>,\n  njamsCount: Scalars['Int'],\n  myNjamsCount: Scalars['Int'],\n};\n\n\nexport type QueryUserArgs = {\n  id: Scalars['ID']\n};\n\n\nexport type QueryNjamsArgs = {\n  page?: Maybe<Scalars['Int']>,\n  pageSize?: Maybe<Scalars['Int']>\n};\n\n\nexport type QueryNjamArgs = {\n  id: Scalars['ID']\n};\n\n\nexport type QueryMyNjamsArgs = {\n  userId: Scalars['ID'],\n  page?: Maybe<Scalars['Int']>,\n  pageSize?: Maybe<Scalars['Int']>\n};\n\n\nexport type QueryMyNjamsCountArgs = {\n  userId: Scalars['ID']\n};\n\nexport type User = {\n  __typename?: 'User',\n  id: Scalars['ID'],\n  name?: Maybe<Scalars['String']>,\n  lastname?: Maybe<Scalars['String']>,\n};\nexport type CompleteUserFragment = (\n  { __typename?: 'User' }\n  & Pick<User, 'id' | 'name' | 'lastname'>\n);\n\nexport type NjamBaseFragment = (\n  { __typename?: 'Njam' }\n  & Pick<Njam, 'id' | 'location' | 'time' | 'ordered'>\n);\n\nexport type NjamSummaryFragment = (\n  { __typename?: 'Njam' }\n  & { organizer: (\n    { __typename?: 'User' }\n    & Pick<User, 'id' | 'name'>\n  ), participants: Array<(\n    { __typename?: 'User' }\n    & Pick<User, 'id'>\n  )> }\n)\n  & NjamBaseFragment\n;\n\nexport type CompleteNjamFragment = (\n  { __typename?: 'Njam' }\n  & Pick<Njam, 'description'>\n  & { organizer: (\n    { __typename?: 'User' }\n    & Pick<User, 'id' | 'name' | 'lastname'>\n  ), participants: Array<(\n    { __typename?: 'User' }\n    & Pick<User, 'id' | 'name' | 'lastname'>\n  )> }\n)\n  & NjamBaseFragment\n;\n\nexport type CreateNjamMutationVariables = {\n  location: Scalars['String'],\n  description?: Maybe<Scalars['String']>,\n  time: Scalars['String'],\n  organizerId: Scalars['ID'],\n  participantIds?: Maybe<Array<Scalars['ID']>>\n};\n\n\nexport type CreateNjamMutation = (\n  { __typename?: 'Mutation' }\n  & { createNjam: { __typename?: 'Njam' }\n    & CompleteNjamFragment\n   }\n);\n\nexport type LeaveNjamMutationVariables = {\n  userId: Scalars['ID'],\n  njamId: Scalars['ID']\n};\n\n\nexport type LeaveNjamMutation = (\n  { __typename?: 'Mutation' }\n  & { leaveNjam: { __typename?: 'Njam' }\n    & CompleteNjamFragment\n   }\n);\n\nexport type JoinNjamMutationVariables = {\n  userId: Scalars['ID'],\n  njamId: Scalars['ID']\n};\n\n\nexport type JoinNjamMutation = (\n  { __typename?: 'Mutation' }\n  & { joinNjam: { __typename?: 'Njam' }\n    & CompleteNjamFragment\n   }\n);\n\nexport type ToggleOrderedMutationVariables = {\n  id: Scalars['ID'],\n  ordered?: Maybe<Scalars['Boolean']>\n};\n\n\nexport type ToggleOrderedMutation = (\n  { __typename?: 'Mutation' }\n  & { editNjam: { __typename?: 'Njam' }\n    & CompleteNjamFragment\n   }\n);\n\nexport type EditNjamMutationVariables = {\n  id: Scalars['ID'],\n  location?: Maybe<Scalars['String']>,\n  description?: Maybe<Scalars['String']>,\n  time?: Maybe<Scalars['String']>,\n  ordered?: Maybe<Scalars['Boolean']>\n};\n\n\nexport type EditNjamMutation = (\n  { __typename?: 'Mutation' }\n  & { editNjam: { __typename?: 'Njam' }\n    & CompleteNjamFragment\n   }\n);\n\nexport type UsersQueryVariables = {};\n\n\nexport type UsersQuery = (\n  { __typename?: 'Query' }\n  & { users: Array<{ __typename?: 'User' }\n    & CompleteUserFragment\n  > }\n);\n\nexport type UserIdsQueryVariables = {};\n\n\nexport type UserIdsQuery = (\n  { __typename?: 'Query' }\n  & { users: Array<(\n    { __typename?: 'User' }\n    & Pick<User, 'id'>\n  )> }\n);\n\nexport type NjamsQueryVariables = {\n  page?: Maybe<Scalars['Int']>,\n  pageSize?: Maybe<Scalars['Int']>\n};\n\n\nexport type NjamsQuery = (\n  { __typename?: 'Query' }\n  & { njams: Array<{ __typename?: 'Njam' }\n    & NjamSummaryFragment\n  > }\n);\n\nexport type MyNjamsQueryVariables = {\n  userId: Scalars['ID'],\n  page?: Maybe<Scalars['Int']>,\n  pageSize?: Maybe<Scalars['Int']>\n};\n\n\nexport type MyNjamsQuery = (\n  { __typename?: 'Query' }\n  & { myNjams: Array<{ __typename?: 'Njam' }\n    & NjamSummaryFragment\n  > }\n);\n\nexport type NjamQueryVariables = {\n  id: Scalars['ID']\n};\n\n\nexport type NjamQuery = (\n  { __typename?: 'Query' }\n  & { njam: { __typename?: 'Njam' }\n    & CompleteNjamFragment\n   }\n);\n\nexport type NjamsCountQueryVariables = {};\n\n\nexport type NjamsCountQuery = (\n  { __typename?: 'Query' }\n  & Pick<Query, 'njamsCount'>\n);\n\nexport type MyNjamsCountQueryVariables = {\n  userId: Scalars['ID']\n};\n\n\nexport type MyNjamsCountQuery = (\n  { __typename?: 'Query' }\n  & Pick<Query, 'myNjamsCount'>\n);\n\nexport type NjamPageQueryVariables = {\n  id: Scalars['ID']\n};\n\n\nexport type NjamPageQuery = (\n  { __typename?: 'Query' }\n  & { njam: { __typename?: 'Njam' }\n    & CompleteNjamFragment\n  , users: Array<{ __typename?: 'User' }\n    & CompleteUserFragment\n  > }\n);\nexport const CompleteUserFragmentDoc = gql`\n    fragment CompleteUser on User {\n  id\n  name\n  lastname\n}\n    `;\nexport const NjamBaseFragmentDoc = gql`\n    fragment NjamBase on Njam {\n  id\n  location\n  time\n  ordered\n}\n    `;\nexport const NjamSummaryFragmentDoc = gql`\n    fragment NjamSummary on Njam {\n  ...NjamBase\n  organizer {\n    id\n    name\n  }\n  participants {\n    id\n  }\n}\n    ${NjamBaseFragmentDoc}`;\nexport const CompleteNjamFragmentDoc = gql`\n    fragment CompleteNjam on Njam {\n  ...NjamBase\n  description\n  organizer {\n    id\n    name\n    lastname\n  }\n  participants {\n    id\n    name\n    lastname\n  }\n}\n    ${NjamBaseFragmentDoc}`;\nexport const CreateNjamDocument = gql`\n    mutation createNjam($location: String!, $description: String, $time: String!, $organizerId: ID!, $participantIds: [ID!]) {\n  createNjam(location: $location, description: $description, time: $time, organizerId: $organizerId, participantIds: $participantIds) {\n    ...CompleteNjam\n  }\n}\n    ${CompleteNjamFragmentDoc}`;\nexport type CreateNjamMutationFn = ApolloReactCommon.MutationFunction<CreateNjamMutation, CreateNjamMutationVariables>;\n\n    export function useCreateNjamMutation(baseOptions?: ApolloReactHooks.MutationHookOptions<CreateNjamMutation, CreateNjamMutationVariables>) {\n      return ApolloReactHooks.useMutation<CreateNjamMutation, CreateNjamMutationVariables>(CreateNjamDocument, baseOptions);\n    };\nexport type CreateNjamMutationHookResult = ReturnType<typeof useCreateNjamMutation>;\nexport type CreateNjamMutationResult = ApolloReactCommon.MutationResult<CreateNjamMutation>;\nexport type CreateNjamMutationOptions = ApolloReactCommon.BaseMutationOptions<CreateNjamMutation, CreateNjamMutationVariables>;\nexport const LeaveNjamDocument = gql`\n    mutation leaveNjam($userId: ID!, $njamId: ID!) {\n  leaveNjam(userId: $userId, njamId: $njamId) {\n    ...CompleteNjam\n  }\n}\n    ${CompleteNjamFragmentDoc}`;\nexport type LeaveNjamMutationFn = ApolloReactCommon.MutationFunction<LeaveNjamMutation, LeaveNjamMutationVariables>;\n\n    export function useLeaveNjamMutation(baseOptions?: ApolloReactHooks.MutationHookOptions<LeaveNjamMutation, LeaveNjamMutationVariables>) {\n      return ApolloReactHooks.useMutation<LeaveNjamMutation, LeaveNjamMutationVariables>(LeaveNjamDocument, baseOptions);\n    };\nexport type LeaveNjamMutationHookResult = ReturnType<typeof useLeaveNjamMutation>;\nexport type LeaveNjamMutationResult = ApolloReactCommon.MutationResult<LeaveNjamMutation>;\nexport type LeaveNjamMutationOptions = ApolloReactCommon.BaseMutationOptions<LeaveNjamMutation, LeaveNjamMutationVariables>;\nexport const JoinNjamDocument = gql`\n    mutation joinNjam($userId: ID!, $njamId: ID!) {\n  joinNjam(userId: $userId, njamId: $njamId) {\n    ...CompleteNjam\n  }\n}\n    ${CompleteNjamFragmentDoc}`;\nexport type JoinNjamMutationFn = ApolloReactCommon.MutationFunction<JoinNjamMutation, JoinNjamMutationVariables>;\n\n    export function useJoinNjamMutation(baseOptions?: ApolloReactHooks.MutationHookOptions<JoinNjamMutation, JoinNjamMutationVariables>) {\n      return ApolloReactHooks.useMutation<JoinNjamMutation, JoinNjamMutationVariables>(JoinNjamDocument, baseOptions);\n    };\nexport type JoinNjamMutationHookResult = ReturnType<typeof useJoinNjamMutation>;\nexport type JoinNjamMutationResult = ApolloReactCommon.MutationResult<JoinNjamMutation>;\nexport type JoinNjamMutationOptions = ApolloReactCommon.BaseMutationOptions<JoinNjamMutation, JoinNjamMutationVariables>;\nexport const ToggleOrderedDocument = gql`\n    mutation toggleOrdered($id: ID!, $ordered: Boolean) {\n  editNjam(id: $id, ordered: $ordered) {\n    ...CompleteNjam\n  }\n}\n    ${CompleteNjamFragmentDoc}`;\nexport type ToggleOrderedMutationFn = ApolloReactCommon.MutationFunction<ToggleOrderedMutation, ToggleOrderedMutationVariables>;\n\n    export function useToggleOrderedMutation(baseOptions?: ApolloReactHooks.MutationHookOptions<ToggleOrderedMutation, ToggleOrderedMutationVariables>) {\n      return ApolloReactHooks.useMutation<ToggleOrderedMutation, ToggleOrderedMutationVariables>(ToggleOrderedDocument, baseOptions);\n    };\nexport type ToggleOrderedMutationHookResult = ReturnType<typeof useToggleOrderedMutation>;\nexport type ToggleOrderedMutationResult = ApolloReactCommon.MutationResult<ToggleOrderedMutation>;\nexport type ToggleOrderedMutationOptions = ApolloReactCommon.BaseMutationOptions<ToggleOrderedMutation, ToggleOrderedMutationVariables>;\nexport const EditNjamDocument = gql`\n    mutation editNjam($id: ID!, $location: String, $description: String, $time: String, $ordered: Boolean) {\n  editNjam(id: $id, location: $location, description: $description, time: $time, ordered: $ordered) {\n    ...CompleteNjam\n  }\n}\n    ${CompleteNjamFragmentDoc}`;\nexport type EditNjamMutationFn = ApolloReactCommon.MutationFunction<EditNjamMutation, EditNjamMutationVariables>;\n\n    export function useEditNjamMutation(baseOptions?: ApolloReactHooks.MutationHookOptions<EditNjamMutation, EditNjamMutationVariables>) {\n      return ApolloReactHooks.useMutation<EditNjamMutation, EditNjamMutationVariables>(EditNjamDocument, baseOptions);\n    };\nexport type EditNjamMutationHookResult = ReturnType<typeof useEditNjamMutation>;\nexport type EditNjamMutationResult = ApolloReactCommon.MutationResult<EditNjamMutation>;\nexport type EditNjamMutationOptions = ApolloReactCommon.BaseMutationOptions<EditNjamMutation, EditNjamMutationVariables>;\nexport const UsersDocument = gql`\n    query users {\n  users {\n    ...CompleteUser\n  }\n}\n    ${CompleteUserFragmentDoc}`;\n\n    export function useUsersQuery(baseOptions?: ApolloReactHooks.QueryHookOptions<UsersQuery, UsersQueryVariables>) {\n      return ApolloReactHooks.useQuery<UsersQuery, UsersQueryVariables>(UsersDocument, baseOptions);\n    };\n      export function useUsersLazyQuery(baseOptions?: ApolloReactHooks.LazyQueryHookOptions<UsersQuery, UsersQueryVariables>) {\n        return ApolloReactHooks.useLazyQuery<UsersQuery, UsersQueryVariables>(UsersDocument, baseOptions);\n      };\n      \nexport type UsersQueryHookResult = ReturnType<typeof useUsersQuery>;\nexport type UsersQueryResult = ApolloReactCommon.QueryResult<UsersQuery, UsersQueryVariables>;\nexport const UserIdsDocument = gql`\n    query userIds {\n  users {\n    id\n  }\n}\n    `;\n\n    export function useUserIdsQuery(baseOptions?: ApolloReactHooks.QueryHookOptions<UserIdsQuery, UserIdsQueryVariables>) {\n      return ApolloReactHooks.useQuery<UserIdsQuery, UserIdsQueryVariables>(UserIdsDocument, baseOptions);\n    };\n      export function useUserIdsLazyQuery(baseOptions?: ApolloReactHooks.LazyQueryHookOptions<UserIdsQuery, UserIdsQueryVariables>) {\n        return ApolloReactHooks.useLazyQuery<UserIdsQuery, UserIdsQueryVariables>(UserIdsDocument, baseOptions);\n      };\n      \nexport type UserIdsQueryHookResult = ReturnType<typeof useUserIdsQuery>;\nexport type UserIdsQueryResult = ApolloReactCommon.QueryResult<UserIdsQuery, UserIdsQueryVariables>;\nexport const NjamsDocument = gql`\n    query njams($page: Int, $pageSize: Int) {\n  njams(page: $page, pageSize: $pageSize) {\n    ...NjamSummary\n  }\n}\n    ${NjamSummaryFragmentDoc}`;\n\n    export function useNjamsQuery(baseOptions?: ApolloReactHooks.QueryHookOptions<NjamsQuery, NjamsQueryVariables>) {\n      return ApolloReactHooks.useQuery<NjamsQuery, NjamsQueryVariables>(NjamsDocument, baseOptions);\n    };\n      export function useNjamsLazyQuery(baseOptions?: ApolloReactHooks.LazyQueryHookOptions<NjamsQuery, NjamsQueryVariables>) {\n        return ApolloReactHooks.useLazyQuery<NjamsQuery, NjamsQueryVariables>(NjamsDocument, baseOptions);\n      };\n      \nexport type NjamsQueryHookResult = ReturnType<typeof useNjamsQuery>;\nexport type NjamsQueryResult = ApolloReactCommon.QueryResult<NjamsQuery, NjamsQueryVariables>;\nexport const MyNjamsDocument = gql`\n    query myNjams($userId: ID!, $page: Int, $pageSize: Int) {\n  myNjams(userId: $userId, page: $page, pageSize: $pageSize) {\n    ...NjamSummary\n  }\n}\n    ${NjamSummaryFragmentDoc}`;\n\n    export function useMyNjamsQuery(baseOptions?: ApolloReactHooks.QueryHookOptions<MyNjamsQuery, MyNjamsQueryVariables>) {\n      return ApolloReactHooks.useQuery<MyNjamsQuery, MyNjamsQueryVariables>(MyNjamsDocument, baseOptions);\n    };\n      export function useMyNjamsLazyQuery(baseOptions?: ApolloReactHooks.LazyQueryHookOptions<MyNjamsQuery, MyNjamsQueryVariables>) {\n        return ApolloReactHooks.useLazyQuery<MyNjamsQuery, MyNjamsQueryVariables>(MyNjamsDocument, baseOptions);\n      };\n      \nexport type MyNjamsQueryHookResult = ReturnType<typeof useMyNjamsQuery>;\nexport type MyNjamsQueryResult = ApolloReactCommon.QueryResult<MyNjamsQuery, MyNjamsQueryVariables>;\nexport const NjamDocument = gql`\n    query njam($id: ID!) {\n  njam(id: $id) {\n    ...CompleteNjam\n  }\n}\n    ${CompleteNjamFragmentDoc}`;\n\n    export function useNjamQuery(baseOptions?: ApolloReactHooks.QueryHookOptions<NjamQuery, NjamQueryVariables>) {\n      return ApolloReactHooks.useQuery<NjamQuery, NjamQueryVariables>(NjamDocument, baseOptions);\n    };\n      export function useNjamLazyQuery(baseOptions?: ApolloReactHooks.LazyQueryHookOptions<NjamQuery, NjamQueryVariables>) {\n        return ApolloReactHooks.useLazyQuery<NjamQuery, NjamQueryVariables>(NjamDocument, baseOptions);\n      };\n      \nexport type NjamQueryHookResult = ReturnType<typeof useNjamQuery>;\nexport type NjamQueryResult = ApolloReactCommon.QueryResult<NjamQuery, NjamQueryVariables>;\nexport const NjamsCountDocument = gql`\n    query njamsCount {\n  njamsCount\n}\n    `;\n\n    export function useNjamsCountQuery(baseOptions?: ApolloReactHooks.QueryHookOptions<NjamsCountQuery, NjamsCountQueryVariables>) {\n      return ApolloReactHooks.useQuery<NjamsCountQuery, NjamsCountQueryVariables>(NjamsCountDocument, baseOptions);\n    };\n      export function useNjamsCountLazyQuery(baseOptions?: ApolloReactHooks.LazyQueryHookOptions<NjamsCountQuery, NjamsCountQueryVariables>) {\n        return ApolloReactHooks.useLazyQuery<NjamsCountQuery, NjamsCountQueryVariables>(NjamsCountDocument, baseOptions);\n      };\n      \nexport type NjamsCountQueryHookResult = ReturnType<typeof useNjamsCountQuery>;\nexport type NjamsCountQueryResult = ApolloReactCommon.QueryResult<NjamsCountQuery, NjamsCountQueryVariables>;\nexport const MyNjamsCountDocument = gql`\n    query myNjamsCount($userId: ID!) {\n  myNjamsCount(userId: $userId)\n}\n    `;\n\n    export function useMyNjamsCountQuery(baseOptions?: ApolloReactHooks.QueryHookOptions<MyNjamsCountQuery, MyNjamsCountQueryVariables>) {\n      return ApolloReactHooks.useQuery<MyNjamsCountQuery, MyNjamsCountQueryVariables>(MyNjamsCountDocument, baseOptions);\n    };\n      export function useMyNjamsCountLazyQuery(baseOptions?: ApolloReactHooks.LazyQueryHookOptions<MyNjamsCountQuery, MyNjamsCountQueryVariables>) {\n        return ApolloReactHooks.useLazyQuery<MyNjamsCountQuery, MyNjamsCountQueryVariables>(MyNjamsCountDocument, baseOptions);\n      };\n      \nexport type MyNjamsCountQueryHookResult = ReturnType<typeof useMyNjamsCountQuery>;\nexport type MyNjamsCountQueryResult = ApolloReactCommon.QueryResult<MyNjamsCountQuery, MyNjamsCountQueryVariables>;\nexport const NjamPageDocument = gql`\n    query njamPage($id: ID!) {\n  njam(id: $id) {\n    ...CompleteNjam\n  }\n  users {\n    ...CompleteUser\n  }\n}\n    ${CompleteNjamFragmentDoc}\n${CompleteUserFragmentDoc}`;\n\n    export function useNjamPageQuery(baseOptions?: ApolloReactHooks.QueryHookOptions<NjamPageQuery, NjamPageQueryVariables>) {\n      return ApolloReactHooks.useQuery<NjamPageQuery, NjamPageQueryVariables>(NjamPageDocument, baseOptions);\n    };\n      export function useNjamPageLazyQuery(baseOptions?: ApolloReactHooks.LazyQueryHookOptions<NjamPageQuery, NjamPageQueryVariables>) {\n        return ApolloReactHooks.useLazyQuery<NjamPageQuery, NjamPageQueryVariables>(NjamPageDocument, baseOptions);\n      };\n      \nexport type NjamPageQueryHookResult = ReturnType<typeof useNjamPageQuery>;\nexport type NjamPageQueryResult = ApolloReactCommon.QueryResult<NjamPageQuery, NjamPageQueryVariables>;","import faker from 'faker';\nimport { range } from 'ramda';\nimport { Optional } from 'utility-types';\nimport { Njam, User } from '../generated/graphql';\n\nexport const generateUser = (): User => ({\n  id: faker.random.uuid(),\n  name: faker.name.firstName(),\n  lastname: faker.name.lastName(),\n});\n\ntype Constraints = Optional<\n  Exclude<Required<Parameters<typeof faker.random.number>[0]>, undefined>,\n  'precision'\n>;\n\nexport const generateCollection = <C extends User | Njam>(\n  generator: () => C,\n) => (constraints: Constraints) => () => {\n  const length = faker.random.number(constraints);\n  const generatedRange = range(0)(length);\n  return generatedRange.map(generator);\n};\n\nexport const generateUsers = generateCollection(generateUser)({\n  min: 1,\n  max: 5,\n});\n\nexport const generateNjam = (): Njam => {\n  const organizer = generateUser();\n  const participants = [organizer].concat(generateUsers());\n\n  return {\n    id: faker.random.uuid(),\n    location: faker.address.streetName(),\n    time: faker.date.recent(-7).toDateString(),\n    ordered: faker.random.boolean(),\n    organizer,\n    description: faker.lorem.sentences(),\n    participants,\n  };\n};\n\nexport const generateNjams = generateCollection(generateNjam)({\n  min: 5,\n  max: 10,\n});\n","import React from 'react';\n\nconst initialId = '';\n\nexport const useUserId = () => {\n  const [userId, setUserId] = React.useState(initialId);\n\n  React.useEffect(() => {\n    const id = localStorage.getItem('userId');\n\n    if (id) {\n      setUserId(id);\n    }\n  }, [setUserId]);\n\n  return userId;\n};\n","import { kebabCase } from 'lodash';\nimport moment from 'moment';\nimport urlJoin from 'url-join';\nimport { MutationCreateNjamArgs, Njam, User } from '../generated/graphql';\nimport { NjamFormValues } from '../models';\n\nexport * from './generators';\nexport * from './hooks';\n\nexport const toAbsolutePath = (s: string) => urlJoin('/', kebabCase(s));\n\n// https://stackoverflow.com/questions/39969570/deprecation-warning-in-moment-js/51238958\nexport const createMoment = (time: string) => moment(new Date(time));\n\nexport const formValuesToNjam = (userId: User['id']) => ({\n  time,\n  participantIds,\n  ...values\n}: NjamFormValues) => {\n  return {\n    ...values,\n    time: time.toDate().toString(),\n    participantIds: participantIds.concat(userId),\n  } as MutationCreateNjamArgs;\n};\n\nexport const njamToFormValues = ({\n  time,\n  organizer,\n  participants,\n  ...njam\n}: Njam): NjamFormValues => ({\n  ...njam,\n  time: createMoment(time),\n  organizerId: organizer.id,\n  participantIds: participants.map(({ id }) => id),\n});\n","import { mapValues } from 'lodash';\nimport moment from 'moment';\nimport { Njam, Scalars, User } from '../generated/graphql';\nimport { toAbsolutePath } from '../utils';\n\nexport type Users = User[];\n\nexport type Njams = Njam[];\n\nexport interface NjamFormValues\n  extends Omit<Njam, 'id' | 'time' | 'organizer' | 'participants'> {\n  time: moment.Moment;\n  organizerId: Scalars['ID'];\n  participantIds: Scalars['ID'][];\n}\n\nexport const routeName = {\n  njams: 'njams',\n  createNjam: 'createNjam',\n  users: 'users',\n};\n\nexport const routePath = mapValues(routeName, toAbsolutePath);\n\nexport const publicRouteName = {\n  signIn: 'signIn',\n};\n\nexport const publicRoutePath = mapValues(publicRouteName, toAbsolutePath);\n","import React from 'react';\nimport Loading, { LoadingProps } from './Loading';\n\nexport interface LoadingOverlayProps extends LoadingProps {}\n\nconst LoadingOverlay: React.FC<LoadingOverlayProps> = ({ style, ...props }) => (\n  <Loading\n    {...props}\n    style={{\n      ...style,\n      position: 'absolute',\n      top: '50%',\n      left: '50%',\n      zIndex: 2,\n    }}\n  />\n);\n\nexport default LoadingOverlay;\n","/* eslint-disable react-hooks/exhaustive-deps */\n\nimport { Form, Input, Switch, TimePicker } from 'antd';\nimport { FormComponentProps } from 'antd/lib/form';\nimport moment from 'moment';\nimport { range } from 'ramda';\nimport React from 'react';\nimport { UserSelect } from '../../components';\nimport { User } from '../../generated/graphql';\nimport { NjamFormValues, Users } from '../../models';\n\nconst momentFormat = 'HH:mm';\n\nexport interface NjamFormProps extends FormComponentProps<NjamFormValues> {\n  initialValues: NjamFormValues;\n  readOnly?: boolean;\n  users: Users;\n  userId: User['id'];\n  hideOrdered?: boolean;\n  readOnlyParticipants?: boolean;\n}\n\nconst NjamForm: React.FC<NjamFormProps> = ({\n  readOnly = false,\n  form,\n  initialValues,\n  users,\n  userId,\n  hideOrdered = false,\n  readOnlyParticipants = false,\n}) => {\n  const readOnlyStyle: React.CSSProperties = {\n    pointerEvents: readOnly ? 'none' : 'initial',\n  };\n\n  const {\n    location,\n    time,\n    description,\n    organizerId,\n    participantIds,\n    ordered,\n  } = initialValues;\n\n  return (\n    <Form\n      onSubmit={e => {\n        e.preventDefault();\n      }}\n      hideRequiredMark={readOnly}\n    >\n      <Form.Item label=\"Location\">\n        {form.getFieldDecorator('location', {\n          initialValue: location,\n          rules: [{ required: true }],\n        })(<Input readOnly={readOnly} />)}\n      </Form.Item>\n      <Form.Item label=\"Time\">\n        {form.getFieldDecorator('time', {\n          initialValue: time,\n          rules: [\n            {\n              required: true,\n              type: 'object',\n            },\n          ],\n        })(\n          <TimePicker\n            inputReadOnly\n            style={readOnlyStyle}\n            format={momentFormat}\n            disabledHours={() => range(0)(23).filter(n => n < moment().hours())}\n          />,\n        )}\n      </Form.Item>\n      <Form.Item\n        label=\"Ordered\"\n        style={{ display: hideOrdered ? 'none' : 'initial' }}\n      >\n        {form.getFieldDecorator('ordered', {\n          initialValue: ordered,\n          valuePropName: 'checked',\n        })(<Switch style={readOnlyStyle} />)}\n      </Form.Item>\n      <Form.Item label=\"Description\">\n        {form.getFieldDecorator('description', {\n          initialValue: description,\n        })(<Input.TextArea readOnly={readOnly} />)}\n      </Form.Item>\n      <Form.Item label=\"Participants\">\n        {form.getFieldDecorator('participantIds', {\n          initialValue: participantIds.filter(id => id !== userId),\n        })(\n          <UserSelect\n            style={{\n              pointerEvents:\n                readOnly || readOnlyParticipants ? 'none' : 'initial',\n            }}\n            mode=\"multiple\"\n            users={users.filter(({ id }) => id !== userId)}\n          />,\n        )}\n      </Form.Item>\n      <Form.Item label=\"Organizer\">\n        {form.getFieldDecorator('organizerId', {\n          initialValue: organizerId,\n        })(<UserSelect style={{ pointerEvents: 'none' }} users={users} />)}\n      </Form.Item>\n    </Form>\n  );\n};\nexport default NjamForm;\n","import { Button, Form } from 'antd';\nimport { FormComponentProps } from 'antd/lib/form';\nimport moment from 'moment';\nimport { any, isEmpty } from 'ramda';\nimport React from 'react';\nimport { Redirect, RouteComponentProps } from 'react-router';\nimport { Box } from 'rebass';\nimport { Err, FormContainer, Retry } from '../../components';\nimport LoadingOverlay from '../../components/LoadingOverlay';\nimport { useCreateNjamMutation, useUsersQuery } from '../../generated/graphql';\nimport { NjamFormValues, routeName, routePath } from '../../models';\nimport { formValuesToNjam, useUserId } from '../../utils';\nimport NjamForm from './NjamForm';\n\nexport interface CreateNjamProps\n  extends FormComponentProps<NjamFormValues>,\n    RouteComponentProps {}\n\nconst CreateNjam: React.FC<CreateNjamProps> = ({ form }) => {\n  const userId = useUserId();\n\n  const disabled =\n    !form.isFieldsTouched() ||\n    any(Boolean)(Object.values(form.getFieldsError()));\n\n  const [createNjam, { data, loading, error }] = useCreateNjamMutation();\n\n  const usersQueryResult = useUsersQuery();\n\n  const { data: { users } = { users: [] } } = usersQueryResult;\n\n  const usersNotLoaded = isEmpty(users);\n\n  return (\n    <FormContainer>\n      {usersQueryResult.loading && <LoadingOverlay />}\n      {usersQueryResult.error && (\n        <Box mb={3}>\n          <Retry\n            error={usersQueryResult.error}\n            refetch={usersQueryResult.refetch}\n          >\n            Reload Users\n          </Retry>\n        </Box>\n      )}\n      <NjamForm\n        readOnly={usersNotLoaded}\n        initialValues={{\n          location: '',\n          ordered: false,\n          time: moment().add(1, 'hour'),\n          organizerId: usersNotLoaded ? '' : userId,\n          participantIds: [],\n          description: '',\n        }}\n        form={form}\n        users={users}\n        userId={userId}\n        hideOrdered\n      />\n      <Button\n        loading={loading}\n        disabled={disabled}\n        onClick={() => {\n          form.validateFieldsAndScroll((error, values) => {\n            if (!error) {\n              const variables = formValuesToNjam(userId)(values);\n\n              createNjam({ variables });\n            }\n          });\n        }}\n      >\n        Create Njam\n      </Button>\n      {error && (\n        <Box mt={3}>\n          <Err {...error} />\n        </Box>\n      )}\n      {data && <Redirect to={routePath.njams} />}\n    </FormContainer>\n  );\n};\n\nexport default Form.create<CreateNjamProps>({ name: routeName.createNjam })(\n  CreateNjam,\n);\n","import { Button, Form } from 'antd';\nimport { FormComponentProps } from 'antd/lib/form';\nimport React from 'react';\nimport { RouteComponentProps } from 'react-router';\nimport { Box, Flex } from 'rebass';\nimport { Err, FormContainer } from '../../components';\nimport LoadingOverlay from '../../components/LoadingOverlay';\nimport { useEditNjamMutation, useNjamPageQuery } from '../../generated/graphql';\nimport { NjamFormValues, routeName } from '../../models';\nimport { formValuesToNjam, njamToFormValues, useUserId } from '../../utils';\nimport NjamForm from './NjamForm';\n\ninterface NjamProps\n  extends RouteComponentProps<{ id: string }>,\n    FormComponentProps<NjamFormValues> {}\n\nconst Njam: React.FC<NjamProps> = ({\n  match: {\n    params: { id },\n  },\n  form,\n}) => {\n  const [readOnly, setReadOnly] = React.useState(true);\n  const toggleReadOnly = () => setReadOnly(!readOnly);\n\n  const userId = useUserId();\n\n  const [editNjam, editNjamResult] = useEditNjamMutation();\n\n  const save = () => {\n    form.validateFieldsAndScroll((error, values) => {\n      if (!error) {\n        const { organizerId, participantIds, ...variables } = formValuesToNjam(\n          userId,\n        )(values);\n\n        editNjam({ variables: { ...variables, id } });\n        toggleReadOnly();\n      }\n    });\n  };\n\n  // alternatively use initial data locally or though a initial global cache\n  const { loading, error, data } = useNjamPageQuery({\n    pollInterval: 1000,\n    variables: { id },\n  });\n\n  if (loading) {\n    return <LoadingOverlay />;\n  }\n\n  if (error) {\n    return (\n      <Box my={3}>\n        <Err {...error} />\n      </Box>\n    );\n  }\n\n  const { njam, users } = data!;\n\n  const formValues = njamToFormValues(njam);\n\n  return (\n    <FormContainer>\n      {editNjamResult.error && (\n        <Box my={3}>\n          <Err {...editNjamResult.error} />\n        </Box>\n      )}\n      <Flex justifyContent=\"flex-end\">\n        {formValues.organizerId === userId && !loading && !error && (\n          <Box mr={4}>\n            {readOnly ? (\n              <Button\n                icon=\"edit\"\n                onClick={toggleReadOnly}\n                loading={editNjamResult.loading}\n              />\n            ) : (\n              <Box>\n                <Button\n                  icon=\"close\"\n                  onClick={() => {\n                    toggleReadOnly();\n\n                    form.resetFields();\n                  }}\n                  style={{ marginRight: 10 }}\n                />\n                <Button icon=\"check\" onClick={save} />\n              </Box>\n            )}\n          </Box>\n        )}\n      </Flex>\n      <NjamForm\n        readOnly={readOnly}\n        form={form}\n        initialValues={formValues}\n        users={users}\n        userId={userId}\n        readOnlyParticipants\n      />\n    </FormContainer>\n  );\n};\n\nexport default Form.create<NjamProps>({ name: routeName.njams })(Njam);\n","import { useMutation, useQuery } from '@apollo/react-hooks';\nimport {\n  Button,\n  Col,\n  List,\n  Popover,\n  Row,\n  Switch,\n  Tabs,\n  Tooltip,\n  Typography,\n} from 'antd';\nimport { css } from 'emotion';\nimport { capitalize, startCase } from 'lodash';\nimport moment from 'moment';\nimport qs from 'query-string';\nimport { always } from 'ramda';\nimport React from 'react';\nimport { NavLink, RouteComponentProps } from 'react-router-dom';\nimport { Box, Flex } from 'rebass';\nimport urlJoin from 'url-join';\nimport { Err } from '../components';\nimport {\n  JoinNjamDocument,\n  JoinNjamMutationResult,\n  JoinNjamMutationVariables,\n  LeaveNjamDocument,\n  LeaveNjamMutationResult,\n  MyNjamsCountDocument,\n  MyNjamsCountQueryResult,\n  MyNjamsCountQueryVariables,\n  MyNjamsDocument,\n  MyNjamsQueryVariables,\n  Njam,\n  NjamsCountDocument,\n  NjamsCountQueryResult,\n  NjamsDocument,\n  NjamsQueryVariables,\n  NjamSummaryFragment,\n  useToggleOrderedMutation,\n} from '../generated/graphql';\nimport { createMoment, useUserId } from '../utils';\n\nconst createNjamAction = ({\n  mutation,\n  getInverse,\n  text,\n}: {\n  mutation: Parameters<typeof useMutation>[0];\n  getInverse: () => React.ComponentType<JoinNjamMutationVariables>;\n  text: string;\n}): React.FC<JoinNjamMutationVariables> => variables => {\n  const [mutationFunction, { loading, error, data }] = useMutation<\n    JoinNjamMutationResult & LeaveNjamMutationResult,\n    JoinNjamMutationVariables\n  >(mutation, { variables });\n\n  const { name, message } = error || new Error('');\n\n  const dataLoaded = Object.values(data || {}).length;\n\n  const Inverse = getInverse();\n\n  return dataLoaded ? (\n    <Inverse {...variables} />\n  ) : (\n    <Popover visible={!!error} title={name} content={message}>\n      <Button\n        loading={loading}\n        onClick={e => {\n          e.preventDefault();\n\n          mutationFunction();\n        }}\n      >\n        {text}\n      </Button>\n    </Popover>\n  );\n};\n\nconst LeaveNjam = createNjamAction({\n  mutation: LeaveNjamDocument,\n  text: 'Leave',\n  getInverse: () => JoinNjam,\n});\n\nconst JoinNjam = createNjamAction({\n  mutation: JoinNjamDocument,\n  text: 'Join',\n  getInverse: () => LeaveNjam,\n});\n\nconst keys = ['location', 'time', 'organizer', 'ordered', 'you'] as const;\nconst columns = keys.map(capitalize);\n\nconst smallerSpan = 4;\nconst largerSpan = 5;\n\nconst Column: React.FC<{ children: string }> = ({ children }) => (\n  <Col\n    span={largerSpan}\n    style={{\n      overflow: 'hidden',\n      whiteSpace: 'nowrap',\n      textOverflow: 'ellipsis',\n    }}\n    title={children}\n  >\n    <Typography.Text>{children}</Typography.Text>\n  </Col>\n);\n\ntype FilterValue = (njam: Njam) => boolean;\n\ninterface Filter {\n  name: string;\n  value: FilterValue;\n}\n\nconst oneHourInThePast = moment().subtract(1, 'hour');\n\nconst initialPage = 1;\nconst pageSize = 10;\n\nenum CollectionQueryKey {\n  njams = 'njams',\n  myNjams = 'myNjams',\n}\ntype CollectionQueryResult = {\n  [key in CollectionQueryKey]: NjamSummaryFragment[];\n};\n\nexport interface NjamsProps extends RouteComponentProps {}\n\nconst Njams: React.FC<NjamsProps> = ({\n  match: { path },\n  location: { search },\n  history,\n}) => {\n  const userId = useUserId();\n\n  const [queries, setQueries] = React.useState<{\n    njams: typeof NjamsDocument;\n    count: typeof NjamsCountDocument;\n  }>({\n    njams: NjamsDocument,\n    count: NjamsCountDocument,\n  });\n\n  const filterNames = [\n    'all',\n    'upcoming',\n    'inProgress',\n    'byYou',\n    'past',\n  ] as const;\n  type FilterName = typeof filterNames[number];\n  const filterName = filterNames.reduce(\n    (_filterName, name) => ({ ..._filterName, [name]: name }),\n    {} as { [name in FilterName]: name },\n  );\n\n  const filters: Filter[] = [\n    { name: filterName.all, value: always(true) },\n    {\n      name: filterName.upcoming,\n      value: ({ time }) => createMoment(time).isAfter(moment()),\n    },\n    {\n      name: filterName.inProgress,\n      value: ({ time }) => {\n        const momentTime = createMoment(time);\n\n        return momentTime.isBetween(oneHourInThePast, moment());\n      },\n    },\n    {\n      name: filterName.byYou,\n      value: ({ organizer: { id } }) => {\n        return id === userId;\n      },\n    },\n    {\n      name: filterName.past,\n      value: ({ time }) => {\n        const momentTime = createMoment(time);\n\n        return momentTime.isBefore(oneHourInThePast);\n      },\n    },\n  ];\n  const filterQuery = qs.parse(search).filter as FilterName;\n  const activeFilter = filterNames.includes(filterQuery) ? filterQuery : 'all';\n\n  const {\n    error,\n    data,\n    loading,\n    fetchMore,\n    // refetch,\n  } = useQuery<\n    CollectionQueryResult,\n    NjamsQueryVariables & MyNjamsQueryVariables\n  >(queries.njams, {\n    variables: { userId, page: initialPage, pageSize },\n    // pollInterval: 1000,\n    fetchPolicy: 'cache-and-network',\n  });\n  const [njams = []] = Object.values(data!) as [NjamSummaryFragment[]];\n\n  const countResult = useQuery<\n    NjamsCountQueryResult | MyNjamsCountQueryResult,\n    MyNjamsCountQueryVariables\n  >(queries.count, { variables: { userId }, pollInterval: 1000 });\n  const [count = 0] = Object.values(countResult.data!);\n\n  const [toggleOrdered, toggleOrderedResults] = useToggleOrderedMutation();\n  const toggleOrderedError = toggleOrderedResults.error || new Error('');\n\n  const loadedAll = njams.length >= count;\n\n  const page = Math.ceil(njams.length / pageSize);\n\n  const isONNewPage = njams.length % pageSize === 0;\n\n  return (\n    <Box>\n      <Flex>\n        <Tabs\n          activeKey={activeFilter}\n          onChange={filterName => {\n            history.push({\n              search: qs.stringify({ filter: filterName }),\n            });\n          }}\n        >\n          {filters.map(({ name }) => (\n            <Tabs.TabPane key={name} tab={startCase(name)} disabled={loading} />\n          ))}\n        </Tabs>\n        <Box ml={4} mt={10}>\n          <Tooltip title=\"Switch between all the njams and just the njams you are going to\">\n            <Switch\n              loading={loading}\n              checkedChildren=\"Going to\"\n              unCheckedChildren=\"All Njams\"\n              onChange={on => {\n                setQueries(\n                  on\n                    ? { njams: MyNjamsDocument, count: MyNjamsCountDocument }\n                    : { njams: NjamsDocument, count: NjamsCountDocument },\n                );\n              }}\n            />\n          </Tooltip>\n        </Box>\n        {/* <Box ml={4} mt={1}>\n          <Button\n            icon=\"reload\"\n            onClick={() => {\n              refetch({ userId, page });\n            }}\n          />\n        </Box> */}\n        {/* <Box>\n          <Button\n            onClick={() => {\n              refetch({ userId, pageSize: 100 });\n            }}\n          >\n            Load 100\n          </Button>\n        </Box> */}\n      </Flex>\n      <List\n        loading={loading}\n        loadMore={\n          <Flex justifyContent=\"center\" alignItems=\"center\" m={4} height={32}>\n            {loadedAll ? (\n              <Typography.Text>Loaded All</Typography.Text>\n            ) : (\n              <Button\n                loading={loading}\n                onClick={() => {\n                  fetchMore({\n                    variables: {\n                      page: isONNewPage ? page + 1 : page,\n                    },\n                    updateQuery: (oldResults, { fetchMoreResult }) => {\n                      const [[njamsKey, oldNjams]] = Object.entries(\n                        oldResults,\n                      ) as [[CollectionQueryKey, NjamSummaryFragment[]]];\n\n                      const [newNjams] = Object.values(fetchMoreResult!);\n\n                      const existingIds = oldNjams.map(({ id }) => id);\n\n                      const filteredNjams = newNjams.filter(\n                        ({ id }) => !existingIds.includes(id),\n                      );\n                      const updatedResult = {\n                        [njamsKey]: oldNjams.concat(filteredNjams),\n                      } as CollectionQueryResult;\n                      return updatedResult;\n                    },\n                  });\n                }}\n              >\n                Load More\n              </Button>\n            )}\n          </Flex>\n        }\n        header={\n          <>\n            {error && (\n              <Box mt={2} mb={3}>\n                <Err {...error} />\n              </Box>\n            )}\n            {countResult.error && (\n              <Box mt={2} mb={3}>\n                <Err {...countResult.error} />\n              </Box>\n            )}\n            <Row>\n              {columns.map((key, i) => {\n                return (\n                  <Col span={i === 3 ? smallerSpan : largerSpan} key={key}>\n                    <Typography.Title level={2} style={{ margin: 0 }}>\n                      {key}\n                    </Typography.Title>\n                  </Col>\n                );\n              })}\n            </Row>\n          </>\n        }\n        bordered\n        dataSource={njams\n          .filter(filters.find(({ name }) => name === activeFilter)!.value)\n          .filter(\n            njams.length > count &&\n              queries.njams.definitions[0].name.value ===\n                CollectionQueryKey.myNjams\n              ? ({ participants }) =>\n                  participants.map(({ id }) => id).includes(userId)\n              : always(true),\n          )}\n        renderItem={({\n          id,\n          location,\n          time,\n          ordered,\n          organizer,\n          participants,\n        }) => {\n          const isParticipating = participants\n            .map(({ id }) => id)\n            .includes(userId);\n\n          return (\n            <NavLink to={urlJoin(path, id)}>\n              <List.Item\n                className={css`\n                  cursor: pointer;\n                  &:hover {\n                    background: #eee;\n                  }\n                `}\n              >\n                <Column>{location}</Column>\n                <Column>{time}</Column>\n                <Column>{organizer.name!}</Column>\n                <Col span={smallerSpan}>\n                  <Popover\n                    visible={!!toggleOrderedResults.error}\n                    title={toggleOrderedError.name}\n                    content={toggleOrderedError.message}\n                  >\n                    <Switch\n                      checkedChildren=\"Yes\"\n                      unCheckedChildren=\"No\"\n                      disabled={userId !== organizer.id}\n                      loading={toggleOrderedResults.loading}\n                      defaultChecked={ordered}\n                      onChange={(_, e) => {\n                        e.preventDefault();\n\n                        toggleOrdered({ variables: { id, ordered: !ordered } });\n                      }}\n                    />\n                  </Popover>\n                </Col>\n                <Col span={largerSpan}>\n                  {organizer.id === userId ? (\n                    <Typography.Text>Author</Typography.Text>\n                  ) : isParticipating ? (\n                    <LeaveNjam userId={userId} njamId={id} />\n                  ) : (\n                    <JoinNjam userId={userId} njamId={id} />\n                  )}\n                </Col>\n              </List.Item>\n            </NavLink>\n          );\n        }}\n      />\n    </Box>\n  );\n};\n\nexport default Njams;\n","import { Button, Form, Typography } from 'antd';\nimport React from 'react';\nimport { RouteComponentProps } from 'react-router';\nimport { FormContainer, Loading, Retry, UserSelect } from '../components';\nimport { useUsersQuery } from '../generated/graphql';\n\nexport interface SignInProps extends RouteComponentProps {}\n\nconst SignIn: React.FC<SignInProps> = ({ history }) => {\n  const [userId, setUserId] = React.useState('');\n\n  const usersQueryResult = useUsersQuery();\n\n  const { data, loading, error, refetch } = usersQueryResult;\n\n  return (\n    <FormContainer mt={3}>\n      <Typography.Title>Select user</Typography.Title>\n      <Form>\n        {(() => {\n          if (loading) {\n            return <Loading />;\n          } else if (error) {\n            return <Retry error={error} refetch={refetch} />;\n          } else {\n            const { users } = data!;\n\n            return (\n              <UserSelect\n                users={users}\n                onChange={id => {\n                  setUserId(id);\n                }}\n              />\n            );\n          }\n        })()}\n        <Button\n          disabled={!userId}\n          onClick={() => {\n            localStorage.setItem('userId', userId);\n            history.push('/');\n          }}\n          style={{ marginTop: 15 }}\n        >\n          Sign in\n        </Button>\n      </Form>\n    </FormContainer>\n  );\n};\nexport default SignIn;\n","import { Col, List, Row, Typography } from 'antd';\nimport React from 'react';\nimport { Err } from '../components';\nimport { useUsersQuery } from '../generated/graphql';\n\nexport interface UsersProps {}\n\nconst Users: React.FC<UsersProps> = () => {\n  const { data, loading, error } = useUsersQuery({\n    pollInterval: 1000,\n  });\n\n  const { users = [] } = data!;\n\n  return (\n    <>\n      {error && <Err {...error} />}\n      <List\n        loading={loading}\n        header={\n          <div>\n            <Row>\n              <Col span={12}>\n                <Typography.Title level={2}>First name</Typography.Title>\n              </Col>\n              <Col span={12}>\n                <Typography.Title level={2}>Last name</Typography.Title>\n              </Col>\n            </Row>\n          </div>\n        }\n        bordered\n        dataSource={users}\n        renderItem={({ name, lastname }) => (\n          <List.Item>\n            <Col span={12}>\n              <Typography.Text>{name}</Typography.Text>\n            </Col>\n            <Col span={12}>\n              <Typography.Text>{lastname}</Typography.Text>\n            </Col>\n          </List.Item>\n        )}\n      />\n    </>\n  );\n};\n\nexport default Users;\n","import {\n  Drawer,\n  Icon as AntIcon,\n  Menu,\n  PageHeader,\n  Row,\n  Typography,\n} from 'antd';\nimport { IconProps as AntIconProps } from 'antd/lib/icon';\nimport { kebabCase, startCase } from 'lodash';\nimport { isEmpty } from 'ramda';\nimport React from 'react';\nimport {\n  NavLink,\n  Redirect,\n  Route,\n  RouteComponentProps,\n  Switch,\n  withRouter,\n} from 'react-router-dom';\nimport urlJoin from 'url-join';\nimport { Err } from '../components';\nimport env from '../env';\nimport { useUserIdsQuery } from '../generated/graphql';\nimport { publicRoutePath, routeName, routePath } from '../models';\nimport Njam, { CreateNjam } from '../pages/Njam';\nimport Njams from '../pages/Njams';\nimport SignIn from '../pages/SignIn';\nimport Users from '../pages/Users';\n\ntype IconProps = Omit<AntIconProps, 'type'>;\n\ntype Icon = React.FC<IconProps>;\n\ninterface IRoute {\n  text: string;\n  path: string;\n  Icon: Icon;\n  Component: React.ComponentType<RouteComponentProps>;\n}\n\nconst mapPartialRoute = ({ text, ...route }: Omit<IRoute, 'path'>): IRoute => {\n  return {\n    ...route,\n    text: startCase(text),\n    path: urlJoin('/', kebabCase(text)),\n  };\n};\n\nconst routes: IRoute[] = [\n  {\n    text: routeName.njams,\n    Icon: (props: IconProps) => <AntIcon {...props} type=\"unordered-list\" />,\n    Component: Njams,\n  },\n  {\n    text: routeName.createNjam,\n    Icon: (props: IconProps) => <AntIcon {...props} type=\"plus-circle\" />,\n    Component: CreateNjam,\n  },\n  {\n    text: routeName.users,\n    Icon: (props: IconProps) => <AntIcon {...props} type=\"user\" />,\n    Component: Users,\n  },\n].map(mapPartialRoute);\n\nconst Layout: React.FC<RouteComponentProps> = ({\n  location: { pathname },\n  history,\n}) => {\n  const [open, setOpen] = React.useState(false);\n  const toggleOpen = () => setOpen(!open);\n\n  const { data, error, stopPolling } = useUserIdsQuery({\n    pollInterval: 1000,\n  });\n\n  React.useEffect(() => {\n    // not using `useUserId` because the value is `''` initially and as such is falsy\n    const userId = localStorage.getItem('userId') || '';\n\n    if (!userId) {\n      history.push(publicRoutePath.signIn);\n    }\n    // use of isEmpty is explained here https://github.com/apollographql/react-apollo/issues/3192\n    if (data && !isEmpty(data)) {\n      stopPolling();\n\n      const { users } = data!;\n\n      if (!users.map(({ id }) => id).includes(userId)) {\n        history.push(publicRoutePath.signIn);\n      }\n    }\n  }, [data]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <>\n      {error && <Err {...error}></Err>}\n      <PageHeader\n        onBack={toggleOpen}\n        title={<NavLink to=\"/\">{env.appName}</NavLink>}\n        backIcon={<AntIcon type=\"menu\" />}\n      />\n      <Drawer\n        title=\"Navigation\"\n        placement=\"left\"\n        visible={open}\n        onClose={toggleOpen}\n        bodyStyle={{ padding: 0 }}\n      >\n        <Menu onClick={toggleOpen} mode=\"inline\" selectedKeys={[pathname]}>\n          {routes.map(({ text, path, Icon }) => (\n            <Menu.Item key={path}>\n              <NavLink to={path}>\n                <Row>\n                  <Icon style={{ marginRight: 10 }} />\n                  <Typography.Text>{text}</Typography.Text>\n                </Row>\n              </NavLink>\n            </Menu.Item>\n          ))}\n        </Menu>\n      </Drawer>\n      <Switch>\n        <Route path={publicRoutePath.signIn} component={SignIn} />\n        <Route\n          exact\n          path=\"/\"\n          render={() => <Redirect to={routePath.njams} />}\n        />\n        {routes.map(({ path, Component }) => (\n          <Route exact key={path} path={path} component={Component} />\n        ))}\n        <Route path={urlJoin(routePath.njams, ':id')} component={Njam} />\n        <Route render={() => 'Not Found'} />\n      </Switch>\n    </>\n  );\n};\n\nexport default withRouter(Layout);\n"],"sourceRoot":""}